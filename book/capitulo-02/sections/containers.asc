=== Entendendo os Containers

No Bootstrap, existe o conceito de container, e ele é muito importante na criação de layouts e no controle das páginas responsivas.

O container é um componente que garante que o seu layout vai ficar alinhado corretamente na página. Ele pode definir margens para as laterais, ou deixar sem margens, e posiciona o conteúdo no centro do browser.

[img]

Dependendo do tamanho da tela em que o seu site estiver sendo exibido, o container vai definir automaticamente as larguras (width) do seu layout.

==== Como Usar o Container

O container também pode ser qualquer uma das tags semânticas do HTML5, como <nav>, <header>, <section>, <aside>, <footer>, etc.

Ele pode ser usado para envolver todo o conteúdo da página e, também, para uma seção, ou parte, da página. É o container que mantém o layout funcionando corretamente.

Você pode ter mais de um container em uma mesma página.

O código a seguir mostra um exemplo de container implementado em uma página com Bootstrap:

[source,html]
.containers.html
----
<!DOCTYPE html>
<html lang="pt">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bootstrap Template</title>

    <link href="css/bootstrap.min.css" rel="stylesheet">
  </head>
  <body>
    <div class="container">
      <h1 class="page-header">Hello, Bootstrap!</h1>
      ...
    </div>

    <script src="js/jquery.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
  </body>
</html>
----

Essa é a marcação que gerou a imagem anterior. Perceba que o container adicionou margens laterais ao conteúdo, e centralizou na tela. Além disso, ele já definiu a largura máxima do conteúdo.

Você pode escolher entre dois tipos de containers para usar em suas páginas: o *container simples* e o *container fluído*.

O container simples, que é o padrão, cria uma área responsiva e de largura fixa, que fica centralizada na tela (ou no elemento-pai). No código abaixo, temos um exemplo do container simples:

[[source, html]]
----
<div class="container">
  ...
</div>
----

[img]

Já o container fluído também cria uma área responsiva, mas que ocupa toda a tela (também conhecido como full width).

[[source, html]]
----
<div class="container-fluid">
  ...
</div>
----

[img]

Qual que você deve escolher? Bom, isso vai depender de como seu layout deve se comportar... Se o layout tiver que ter uma largura fixa, use o primeiro. Se for largura variável, use o segundo.

Há, também, situações em que você precisará usar vários containers, onde um vai ficar abaixo do outro. Ou dentro de outros componentes.

Sendo assim, no Bootstrap, todos os elementos visuais da página devem estar dentro de, pelo menos, um container. Até porquê, é o container que mantém o layout funcionando corretamente.